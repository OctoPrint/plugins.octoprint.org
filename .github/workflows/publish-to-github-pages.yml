name: Build, validate & deploy page

on:
  schedule:
    - cron: '0 */1 * * *'
  push:
    branches:
      - gh-pages
  pull_request:
    branches:
      - gh-pages
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build and validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 🐍 Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: 🐍 Install requirements
        run: |
          pip install -r ./.github/scripts/requirements.txt

      - name: 📺 Refresh youtube thumbnails
        run: |
          chmod +x .github/scripts/fetch_yt_preview
          .github/scripts/fetch_yt_preview

      - name: 🕵️‍♂ Validate front matter
        run: |
          python .github/scripts/validate_front_matter.py --action-output

      - name: 🏗 Enrich front matter
        if: github.repository == 'OctoPrint/plugins.octoprint.org' && github.event_name != 'pull_request'
        run: |
          python ./.github/scripts/populate_additional_metadata.py
        env:
          GITHUB_TOKEN: ${{ secrets.metadata_token }}

      - name: 🏗 Enrich notices
        if: github.repository == 'OctoPrint/plugins.octoprint.org' && github.event_name != 'pull_request'
        run: |
          python ./.github/scripts/populate_additional_notices.py
        env:
          GITHUB_TOKEN: ${{ secrets.metadata_token }}

      - name: 🏗 Enrich py2 check overlays
        if: github.repository == 'OctoPrint/plugins.octoprint.org' && github.event_name != 'pull_request'
        run: |
          python ./.github/scripts/populate_py2_overlays.py

      - name: 💎 Set up Ruby 3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      
      - name: 🔨 Build page
        run: |
          bundle exec jekyll build --future --trace

      - name: 🕵️‍♂️ Validate plugins.json
        run: |
          docker run \
          -v ${{ github.workspace }}/_site:/json \
          peterdavehello/jsonlint jsonlint -q /json/plugins.json

      - name: 🕵️‍♂️ Validate notices.json
        run: |
          docker run \
          -v ${{ github.workspace }}/_site:/json \
          peterdavehello/jsonlint jsonlint -q /json/notices.json

      - name: 🕵️‍♂️ Validate search.json
        run: |
          docker run \
          -v ${{ github.workspace }}/_site:/json \
          peterdavehello/jsonlint jsonlint -q /json/search.json

      - name: ⬆ Upload pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./_site

      - name: 📧 Discord success notification
        if: github.repository == 'OctoPrint/plugins.octoprint.org' && github.event_name != 'pull_request'
        env:
          DISCORD_WEBHOOK: ${{ secrets.discord_webhook }}
        uses: Ilshidur/action-discord@master
        with:
          args: '☑️ Page build for plugins.octoprint.org was successful'

      - name: 📧 Discord failure notification
        if: failure() && github.repository == 'OctoPrint/plugins.octoprint.org' && github.event_name != 'pull_request'
        env:
          DISCORD_WEBHOOK: ${{ secrets.discord_webhook }}
        uses: Ilshidur/action-discord@master
        with:
          args: '🚫 Page build for plugins.octoprint.org failed'

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build
    if: github.repository == 'OctoPrint/plugins.octoprint.org' && github.event_name != 'pull_request'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
